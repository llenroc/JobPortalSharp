@model JobPortalSharp.Data.JobPost

@{
    ViewBag.Title = "Create";
}

@section FooterScripts {
    <script type="text/javascript">
        $('#LocationSameAsEmployer').change(function () {
            if ($(this).is(":checked")) {
                $('#pnlCustomAdress').hide();
            } else {
                $('#pnlCustomAdress').show();
            }
        });

        var input = document.getElementById('AddressStreet');
        var autocomplete = new google.maps.places.Autocomplete(input, []);
        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            $('#AddressTown, #AddressState, #AddressCountry, #AddressLongitude, #AddressLatitude').val('');
            var place = autocomplete.getPlace();
            $('#AddressLongitude').val(place.geometry.location.lng());
            $('#AddressLatitude').val(place.geometry.location.lat());

            var ac = place.address_components;
            for (var i = 0; i < ac.length; i++) {
                for (var j = 0; j < ac[i].types.length; j++) {
                    if (ac[i].types[j] == 'locality' || ac[i].types[j] == 'administrative_area_level_2') {
                        $('#AddressTown').val(ac[i].long_name);
                        break;
                    } else if (ac[i].types[j] == 'administrative_area_level_1') {
                        $('#AddressState').val(ac[i].long_name);
                        break;
                    } else if (ac[i].types[j] == 'country') {
                        $('#AddressCountry').val(ac[i].long_name);
                        break;
                    }
                }
            }
        });
    </script>
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <div class="col-md-offset-2">Post a new job</div>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IndustryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IndustryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IndustryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalaryRangeFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalaryRangeFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalaryRangeFrom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalaryRangeTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalaryRangeTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalaryRangeTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationSameAsEmployer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.LocationSameAsEmployer)
            </div>
        </div>

        <div id="pnlCustomAdress" style="display: none;">
            <div class="form-group">
                @Html.LabelFor(m => m.AddressStreet, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.AddressStreet, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.AddressTown, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.AddressTown, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.AddressState, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.AddressState, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.AddressCountry, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.AddressCountry, new { @class = "form-control" })
                </div>
            </div>

            @Html.HiddenFor(m => m.AddressLongitude)
            @Html.HiddenFor(m => m.AddressLatitude)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EmploymentTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmploymentTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Details, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
