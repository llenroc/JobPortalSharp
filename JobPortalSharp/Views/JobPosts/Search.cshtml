@model JobPortalSharp.Models.SearchViewModel
@{
    ViewBag.Title = "Home Page";
}

@section StyleSheets {
    <style type="text/css">
        .btn-apply {
            padding: 10px;
        }
    </style>
}

@section FooterScripts {
    <script type="text/javascript">
        var resultColumnDefs = [{
            'targets': 0,
            'data': function (row, type, val, meta) {
                return '<button id="' + row.Id + '" type="button" class="btn btn-xs btn-primary selection" onclick="addToSelection(this.id)">Apply</button>';
            }
        },
        {
            'targets': 1,
            'data': function (row, type, val, meta) {
                return '<div><strong>' + row.Name + '</strong></div><div>' + row.EmployerName + '</div>';
            }
        },
        {
            'targets': 2,
            'data': function (row, type, val, meta) {
                return '<span class="glyphicon glyphicon-map-marker"></span>' + row.AddressTown + ', ' + row.AddressState + ', ' + row.AddressCountry;
            }
        },
        {
            'targets': 3,
            'data': 'EmploymentTypeName'
        }]
        var urlVars = getUrlVars();

        $('#modalJobApply').on('show.bs.modal', function (e) {
            var $btn = $(e.relatedTarget);
            var $modal = $('#modalJobApply');
            var $form = $modal.find('form');

            $form.removeClass('single');
            $form.removeClass('multiple');
            $form[0].reset();
            if ($btn.hasClass('btn-apply')) {
                var jobPostId = $btn.closest('.result-row')[0].id;
                $form.attr('action', '/jobposts/apply/' + jobPostId);
                $form.addClass('single');
            }
            if ($btn.hasClass('btn-apply-multiple')) {
                $form.attr('action', '/jobposts/applymultiple')
                $form.addClass('multiple');
            }
        })

        function addToSelection(id) {
            if ($('#' + id).hasClass('btn-primary')) {
                if (!localStorage['job_selections']) {
                    localStorage['job_selections'] = JSON.stringify([id]);
                } else {
                    var jobSelections = JSON.parse(localStorage['job_selections']);
                    jobSelections.push(id);
                    localStorage['job_selections'] = JSON.stringify(jobSelections);
                }
            } else {
                var jobSelections = JSON.parse(localStorage['job_selections']);
                var index = jobSelections.indexOf(id);
                jobSelections.splice(index, 1);
                localStorage['job_selections'] = JSON.stringify(jobSelections);
            }
            
            refreshJobCart();
            updateJobCartButtons();
        }

        function sendApplication() {
            var $modal = $('#modalJobApply');
            var $form = $modal.find('form');
            var jobSelections = [];

            if ($form.hasClass('multiple')) {
                jobSelections = JSON.parse(localStorage['job_selections']);
            }

            if ($form.valid()) {
                var formData = new FormData($form[0]);

                for (var i = 0; i < jobSelections.length; i++) {
                    formData.append('ids', jobSelections[i])
                }

                $.ajax({
                    url: $form.attr('action'),
                    type: 'POST',
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function () {
                        $modal.modal('hide');
                        $form.validate().resetForm();
                        $form[0].reset();
                        localStorage['job_selections'] = '';
                        refreshJobCart();
                        updateJobCartButtons();
                    }
                });
            }
        }

        function refreshJobCart() {
            var $jobCart = $('.job-cart');
            if (!localStorage['job_selections']) {
                $jobCart.hide();
            } else {
                var $cart = $('.job-cart');
                var jobSelections = JSON.parse(localStorage['job_selections']);
                if (jobSelections.length > 0) {
                    $cart.find('.count').html(jobSelections.length);
                    $jobCart.show();
                } else {
                    $jobCart.hide();
                }
            }
        }

        function updateJobCartButtons() {
            var jobSelections = [];
            if (localStorage['job_selections']) {
                jobSelections = JSON.parse(localStorage['job_selections']);
            }

            $('.result-table tr button.selection').each(function () {
                if (jobSelections.indexOf(this.id) >= 0) {
                    $(this).html('Remove');
                    $(this).addClass('btn-warning');
                    $(this).removeClass('btn-primary');
                } else {
                    $(this).html('Apply');
                    $(this).addClass('btn-primary');
                    $(this).removeClass('btn-warning');
                }
            })
        }

        function loadInitialResult() {
            if (urlVars['l1'] || (!urlVars['l1'] && !urlVars['l2'])) {
                var tblResult1 = $('#tblResult1').DataTable({
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        'url': "/api/jobposts/search" + generateUrlParams(1),
                        'dataSrc': 'data'
                    },
                    'columnDefs': resultColumnDefs,
                    'dom': 'tp'
                })
                tblResult1.on('draw', updateJobCartButtons);
            }

            if (urlVars['l2']) {
                var tblResult2 = $('#tblResult2').DataTable({
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        'url': "/api/jobposts/search" + generateUrlParams(2),
                        'dataSrc': 'data'
                    },
                    'columnDefs': resultColumnDefs,
                    'dom': 'tp'
                })
                tblResult1.on('draw', updateJobCartButtons);
            }
        }

        function generateUrlParams(loc) {
            if (loc == 1) {
                return '?q=' + urlVars['q'] + '&l=' + urlVars['l1'] + '&lat=' + urlVars['lat1'] +
                    '&lng=' + urlVars['lng1'] + '&nb=' + urlVars['nb1'];
            } else {
                return '?q=' + urlVars['q'] + '&l=' + urlVars['l2'] + '&lat=' + urlVars['lat2'] +
                    '&lng=' + urlVars['lng2'] + '&nb=' + urlVars['nb2'];
            }
        }

        function clearSelections() {
            localStorage.removeItem('job_selections');
            $('.job-cart').hide();
            updateJobCartButtons();
        }

        function initializeGoogleApi() {
            var inputL1 = document.getElementById('l1');
            var inputL2 = document.getElementById('l2');
            var autocomplete1 = new google.maps.places.Autocomplete(inputL1, []);
            var autocomplete2 = new google.maps.places.Autocomplete(inputL2, []);

            google.maps.event.addListener(autocomplete1, 'place_changed', function () {
                var place = autocomplete1.getPlace();
                $('#lng1').val(place.geometry.location.lng());
                $('#lat1').val(place.geometry.location.lat());
                console.log(2)
            });

            google.maps.event.addListener(autocomplete2, 'place_changed', function () {
                var place = autocomplete2.getPlace();
                $('#lng2').val(place.geometry.location.lng());
                $('#lat2').val(place.geometry.location.lat());
                console.log(1)
            });
        }

        $(function () {
            $('.result-row input[type=checkbox]').change(function (event) {
                event.stopPropagation();
                event.preventDefault();
                return false;
            });

            $('#chk-adv-search').change(function () {
                if ($(this).is(':checked')) {
                    $('#pane-adv-search').show()
                } else {
                    $('#pane-adv-search').hide();
                }
            })

            $('#ers, #ets').change(function () {
                $('#pnlResult').LoadingOverlay('show');

                //$("#element").LoadingOverlay("hide", true);
            })

            refreshJobCart();
            updateJobCartButtons();
            loadInitialResult();
            initializeGoogleApi();
        })
    </script>
}

<div style="background-color: white; padding: 20px;">
    @using (Html.BeginForm("search", "jobposts", FormMethod.Get))
    {
        <div class="search-box row">
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.q, new { placeholder = "keywords e.g. nurse" })
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.l1, new { placeholder = "location 1" })
                @Html.HiddenFor(m => m.lng1)
                @Html.HiddenFor(m => m.lat1)
                @Html.CheckBoxFor(m => m.nb1, new { style = "margin-right: 10px; width: auto; margin-top: 0" })
                <span>Including Surrounding Areas</span>
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.l2, new { placeholder = "location 2" })
                @Html.HiddenFor(m => m.lng2)
                @Html.HiddenFor(m => m.lat2)
                @Html.CheckBoxFor(m => m.nb2, new { style = "margin-right: 10px; width: auto; margin-top: 0" })
                <span>Including Surrounding Areas</span>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary" style="width:100%;line-height:2.4em">Find Job</button>
            </div>
        </div>
    }
    <div>
        <input type="checkbox" id="chk-adv-search" />
        <label>Advance Search</label>
    </div>
    <div id="pane-adv-search" style="display: none">
        @Html.ListBoxFor(model => model.ers, (IEnumerable<SelectListItem>)ViewBag.EmployerTypes, new { @class = "multiselect" })
        @Html.ListBoxFor(model => model.ets, (IEnumerable<SelectListItem>)ViewBag.EmploymentTypes, new { @class = "multiselect" })
    </div>
</div>

<div class="job-cart">
    <span class="count">@ViewBag.JobSelectionCount</span>
    <span>Job(s) selected</span>
    <button class="btn btn-default btn-apply-multiple" data-toggle="modal" data-target="#modalJobApply">
        <span class="glyphicon glyphicon-send"></span> Send Application
    </button>
    <button class="btn btn-danger" onclick="clearSelections()">
        <span class="glyphicon glyphicon-erase"></span> Clear Selections
    </button>
</div>

<div id="pnlResult">
    <table id="tblResult1" class="result-table table-striped table-hover table-responsive" style="width: 100%; margin-top: 20px">
        <thead>
        </thead>
        <tbody></tbody>
    </table>

    <table id="tblResult2" class="result-table table-striped table-hover table-responsive" style="width: 100%; margin-top: 20px">
        <thead>
        </thead>
        <tbody></tbody>
    </table>
</div>

<!-- Modal -->
<div class="modal fade" id="modalJobApply" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Apply</h4>
            </div>
            @using (Html.BeginForm("Apply", "JobPosts", FormMethod.Post, new { enctype = "multipart/form-data", @class = "modal-body" }))
            {
            <div class="row">
                <label class="col-sm-4">First Name</label>
                <input class="col-sm-8" type="text" required="required" id="FirstName" name="FirstName" style="border: 1px solid lightgray" />
            </div>
            <div class="row">
                <label class="col-sm-4">Last Name</label>
                <input class="col-sm-8" type="text" required="required" id="LastName" name="LastName" style="border: 1px solid lightgray" />
            </div>
            <div class="row">
                <label class="col-sm-4">Your Email Address</label>
                <input class="col-sm-8" type="email" required="required" id="EmailAddress" name="EmailAddress" style="border: 1px solid lightgray" />
            </div>
            <div class="row">
                <label class="col-sm-4">CV</label>
                <input class="col-sm-8 cv" type="file" id="CV" name="CV" required="required" />
            </div>
            <div class="row">
                <label class="col-sm-4">Cover letter (Optional)</label>
                <input class="col-sm-8" type="file" id="CoverLetter" name="CoverLetter" />
            </div>
            }
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="sendApplication()">Send</button>
            </div>
        </div>
    </div>
</div>